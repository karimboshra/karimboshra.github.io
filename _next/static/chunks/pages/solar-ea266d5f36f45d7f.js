(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[562],{8906:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/solar",function(){return s(7893)}])},3193:function(e,t,s){"use strict";s.d(t,{$:function(){return o},r:function(){return a}});var r=s(5893),n=(s(7294),s(1664)),i=s.n(n),a=function(e){var t=e.title,s=e.description,n=e.buttons;return(0,r.jsx)("div",{id:"contact",className:"bg-white py-5 px-5",children:(0,r.jsxs)("div",{className:"container",children:[(0,r.jsx)("h1",{className:"text-primary fw-bold",children:t}),(0,r.jsxs)("div",{className:"px-sm-5",children:[(0,r.jsx)("p",{children:s}),(0,r.jsx)("div",{className:"",children:n.map((function(e,t){return e.isPrimary?(0,r.jsx)(i(),{href:e.link,children:(0,r.jsx)("a",{className:"btn btn-primary my-1 mx-3",children:e.title})},t):(0,r.jsx)(i(),{href:e.link,children:(0,r.jsx)("a",{className:"btn btn-outline-primary my-1 mx-3",children:e.title})},t)}))})]})]})})},o=function(){return(0,r.jsx)("footer",{className:"bg-secondary text-center py-2 px-5",children:(0,r.jsx)("div",{className:"container text-muted",children:(0,r.jsxs)("small",{children:["\xa9 2021 "," ",(0,r.jsx)(i(),{href:"https://github.com/hashirshoaeb",children:(0,r.jsx)("a",{children:"hashirshoaeb"})}),". Open sourced with love under "," ",(0,r.jsx)(i(),{href:"https://github.com/hashirshoaeb/portfolio/blob/main/LICENSE",children:(0,r.jsx)("a",{children:"MIT"})})," "," License"]})})})}},7673:function(e,t,s){"use strict";s.d(t,{h:function(){return a}});var r=s(5893),n=s(9008),i=s.n(n),a=function(e){var t=e.seo;return(0,r.jsxs)(i(),{children:[(0,r.jsx)("title",{children:t.title}),(0,r.jsx)("meta",{name:"description",content:t.description}),(0,r.jsx)("meta",{property:"og:title",content:t.title}),(0,r.jsx)("meta",{property:"og:description",content:t.description}),(0,r.jsx)("meta",{property:"og:image",content:t.image}),(0,r.jsx)("meta",{property:"og:type",content:"website"})]})}},8010:function(e,t,s){"use strict";s.d(t,{J:function(){return o}});var r=s(5893),n=s(7294),i=s(1664),a=s.n(i),o=function(e){var t=e.title,s=e.links,i=(0,n.useState)(!0),o=i[0],l=i[1];return(0,r.jsx)("nav",{className:"navbar navbar-expand-sm navbar-light bg-secondary",children:(0,r.jsxs)("div",{className:"container",children:[(0,r.jsx)(a(),{href:"/",children:(0,r.jsx)("a",{className:"navbar-brand",children:(0,r.jsx)("span",{className:"",children:t})})}),(0,r.jsx)("button",{className:"custom-toggler navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarsExample09","aria-controls":"navbarsExample09","aria-expanded":!o,"aria-label":"Toggle navigation",onClick:function(){return l(!o)},children:(0,r.jsx)("span",{className:"navbar-toggler-icon"})}),(0,r.jsx)("div",{className:"".concat(o?"collapse":""," navbar-collapse"),id:"navbarsExample09",children:(0,r.jsx)("div",{className:"navbar-nav",children:s.map((function(e,t){return(0,r.jsx)(a(),{href:e.link,children:(0,r.jsx)("a",{className:"nav-link",children:e.title})},t)}))})})]})})}},4067:function(e,t,s){"use strict";s.d(t,{HJ:function(){return m},jZ:function(){return o},PX:function(){return d},mf:function(){return a},G:function(){return i},q:function(){return c},ZT:function(){return l}});var r="/_next/static/media/profile.3996f5e6.png",n=s(3024),i={name:"Karim",links:[{title:"Resume",link:"/resume"},{title:"LinkedIn",link:"https://www.linkedin.com/in/karim-ramy-boshra-botros-643163275/"},{title:"Exodus",link:"/exodus"},{title:"Billiards",link:"/billiards"},{title:"Solar System",link:"/solar"}]},a={title:"Hey, I'm Karim",description:"A Software Developer creating video games in Unity.",image:r,buttons:[{title:"Resume",link:"/resume",isPrimary:!0},{title:"LinkedIn",link:"https://www.linkedin.com/in/karim-ramy-boshra-botros-643163275/",isPrimary:!1}]},o={title:"Who I am",description:["I graduated from Concordia University at Montreal in 2023 with a bachelor's degree in Computer Science. I aspire to become a game developer who can create worlds and experiences for players to enjoy."]},l={title:"What I do",cards:[{title:"Unity Game Development",description:"I use Unity to make small-scale video games.",icons:null},{title:"Software Development",description:"I create robust applications using Java and C++.",icons:null}]},c={title:"Projects",cards:[{title:"Exodus",description:"A 2.5D fast-paced dungeon crawler made in Unity with C#. Encompasses all of the programming elements that make up a full game. This project is still a work in progress.",icons:[{icon:n.zhw,link:"/exodus"}],weblink:"/exodus"},{title:"Billiards",description:"A physics-based simulation of billiards made using Java. Built on a custom physics engine with the purpose of demonstrating what we've learned in cegep relating to Physics.",icons:[{icon:n.zhw,link:"/billiards"}],weblink:"/billiards"},{title:"Solar System",description:"An OpenGL real time rendering project that renders a 3D solar system with orbiting planets and allows camera movement along the planets.",icons:[{icon:n.zhw,link:"/solar"}],weblink:"/solar"}]},d={title:"Get in touch",description:"Feel free to reach out directly by email at karimboshra@yahoo.com.",buttons:[{title:"Email Me",link:"mailto:karimboshra@yahoo.com",isPrimary:!0},{title:"LinkedIn",link:"https://www.linkedin.com/in/karim-ramy-boshra-botros-643163275/",isPrimary:!1},{title:"Resume",link:"/resume",isPrimary:!1}]},m={title:"Software Developer | Unity | C++ | Java",description:"I graduated from Concordia University at Montreal in 2023 with a bachelor's degree in Computer Science. I aspire to become a game developer who can create worlds and experiences for players to enjoy.",image:r}},7893:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return m}});var r=s(5893),n=s(7294),i=s(1752),a=s.n(i),o=(s(1664),s(3193)),l=s(4067),c=s(7673),d=s(8010);a()().publicRuntimeConfig;function m(){return(0,r.jsxs)(n.Fragment,{children:[(0,r.jsx)(c.h,{seo:l.HJ}),(0,r.jsx)(d.J,{title:l.G.name,links:l.G.links}),(0,r.jsxs)("div",{className:"d-flex flex-column justify-content-between bg-secondary min-vh-100",children:[(0,r.jsxs)("div",{className:"py-5 px-5 container text-center",children:[(0,r.jsx)("img",{className:"",src:"solar/logo.png",alt:"Game Logo"}),(0,r.jsx)("h3",{className:"mt-3",children:"Solar System"}),(0,r.jsx)("p",{className:"flex-start",children:"A real-time renderer made with OpenGL"}),(0,r.jsx)("h4",{className:"textleft bottomBorder",children:"Description"}),(0,r.jsx)("p",{className:"textleft",children:"This project is a real-time renderer using OpenGL. It is a simulation of a solar system (not up to scale nor based on any real-life solar system). A solar system is composed of a set of planets (spheres) that orbit around an object in the center (a sun or a planet). The simulation runs in real-time, showing the movement of the planets around an orbit. This OpenGL project lays the foundations for basic shading and general movement of objects and the camera. The functions from this project may be used for the creation of a simple computer game in the future."}),(0,r.jsx)("p",{className:"bottomBorder",children:" "}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("h4",{className:"textleft bottomBorder",children:"Download"}),(0,r.jsx)("a",{href:"https://drive.google.com/file/d/1bYOVt3B9wAU3ITbUy9-9q0LXVv4gPaJq/view?usp=share_link",className:"textleft",children:(0,r.jsx)("img",{src:"download.png",width:"100",height:"100",alt:"Dpwnload"})}),(0,r.jsx)("p",{className:"bottomBorder",children:" "}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("h4",{className:"textleft bottomBorder",children:"Full Demonstration"}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/Demonstration.mkv",type:"video/mp4"})}),(0,r.jsx)("p",{className:"bottomBorder",children:" "}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("h4",{className:"textleft bottomBorder",children:"Features"}),(0,r.jsx)("p",{className:"textleft",children:"Sphere rendering - (Vertices, Indices, Texture Coordinates, Normals)"}),(0,r.jsx)("img",{src:"solar/1.png",width:"150",height:"150",alt:"Unknown"}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{className:"textleft",children:"Multiple textures wrapped around spheres"}),(0,r.jsx)("img",{src:"solar/2.png",width:"150",height:"150",alt:"Unknown"}),(0,r.jsx)("p",{children:"   "}),(0,r.jsx)("img",{src:"solar/3.png",width:"150",height:"150",alt:"Unknown"}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{className:"textleft",children:"Continuously orbiting planets, planets spin around an axis"}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/orbit.mkv",type:"video/mp4"})}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/spin.mkv",type:"video/mp4"})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{className:"textleft",children:"Orbiting arc ball camera (Virtual trackball, pan around a planet)"}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/arcball.mkv",type:"video/mp4"})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{className:"textleft",children:"Object picking (Ray-Sphere intersection)"}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/picking.mkv",type:"video/mp4"})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{className:"textleft",children:"Smoothing of camera transitions using linear interpolation (lerp)"}),(0,r.jsx)("video",{width:"960",height:"540",controls:!0,children:(0,r.jsx)("source",{src:"solar/lerp.mkv",type:"video/mp4"})}),(0,r.jsx)("p",{className:"bottomBorder",children:" "}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("h4",{className:"textleft bottomBorder",children:"Difficulties and Tricks"}),(0,r.jsxs)("p",{className:"textleft",children:[(0,r.jsxs)("b",{children:["Sphere rendering:",(0,r.jsx)("br",{})]}),"I ignorantly assumed that rendering spheres in OpenGL would be as easy as calling a function with the sphere\u2019s center and desired radius. Apparently, that is not the case if you are not using a library such as GLut. Luckily, I found online resources that describe how a sphere can be split into triangles and the math that generates its vertices, normals, texture coordinates, and indices."]}),(0,r.jsx)("p",{className:"textleft"}),(0,r.jsxs)("p",{className:"textleft",children:[(0,r.jsx)("b",{children:"Background:"}),(0,r.jsx)("br",{}),"Since outer space is supposed to be infinitely big and visible from all angles in three-dimensional space, having a static square background would ruin the immersion. A simple solution to this is to wrap the solar system with a sphere that has a space or stars texture on its inside face."]}),(0,r.jsx)("p",{className:"textleft"}),(0,r.jsxs)("p",{className:"textleft",children:[(0,r.jsx)("b",{children:"Matrices, vectors, and 3D space:"}),(0,r.jsx)("br",{}),"Almost all the objectives mentioned above relate directly to movement and placement in three-dimensional space. A proper separation and abstraction of the vectors and matrices involved, such as view, project, and model matrices, was very important. All relevant positions and movements relating to the camera and the spheres were put into their own classes."]}),(0,r.jsx)("p",{className:"textleft"}),(0,r.jsx)("p",{className:"bottomBorder",children:" "}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]}),(0,r.jsx)(o.$,{})]})]})}}},function(e){e.O(0,[948,574,774,888,179],(function(){return t=8906,e(e.s=t);var t}));var t=e.O();_N_E=t}]);